#!/bin/bash

# Banner function
banner() {
cat << "EOF"
   ____ ____ _____ _________.__        
  / ___\\   _  \\\__  \\\__  |  |__  ___.__.
 / /_/  >  /_/  >  /_\  \ /   |  |  <   |  |
 \___  /|  \_/   (____  /    ^   /\___  |
/_____/  \_____  /_____/ \____   |/ ____|
              \/             |__|\/     
   Subdomain Recon Tool by 0Ã—mun1r (crt.sh based)
EOF
}

# Help function
usage() {
cat << EOF
Usage: crtsh [options]

Options:
  -d <domain>         Enumerate subdomains for a single domain
  -dL <file>          Enumerate subdomains for a list of domains (one per line)
  -o <output.txt>     Save output to specified file (default: crtsh_output.txt)
  -s                  Silent mode (no banner or terminal output)
  -h                  Show this help message and exit

Examples:
  crtsh -d example.com
  crtsh -dL domains.txt -o results.txt
  crtsh -d nasa.gov -s -o nasa.txt
EOF
exit 0
}

# Variables
domain=""
domain_list=""
output="crtsh_output.txt"
silent=false

# Parse command-line arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -d) domain="$2"; shift ;;
        -dL) domain_list="$2"; shift ;;
        -o) output="$2"; shift ;;
        -s) silent=true ;;
        -h) usage ;;
        *) echo "Unknown parameter: $1"; usage ;;
    esac
    shift
done

# Show banner if not silent
if [ "$silent" = false ]; then
    banner
fi

# Function to fetch and clean subdomains for one domain
fetch_subdomains() {
    local dom="$1"
    local outfile="$2"

    if [ "$silent" = false ]; then
        echo "[*] Enumerating subdomains for: $dom"
    fi

    subs=$(curl -s "https://crt.sh/?q=%25.$dom&output=json" | \
        grep -oE '"name_value":"[^"]+"' | \
        sed -E 's/"name_value":"//' | \
        sed 's/\\n/\n/g' | \
        tr ',' '\n' | \
        sed "s/['\"]//g" | \
        sed 's/\r//g' | \
        tr '[:upper:]' '[:lower:]' | \
        grep -v '@' | \
        sort -u)

    if [ "$silent" = false ]; then
        echo "[+] Clean Subdomains Found for $dom:"
        echo "$subs"
    fi

    # Write domain header and subdomains to output file
    echo -e "\n# Subdomains for $dom" >> "$outfile"
    echo "$subs" >> "$outfile"

    if [ "$silent" = false ]; then
        echo "[+] Done: $(echo "$subs" | wc -l) subdomains saved to $outfile"
    fi
}

# Clear output file before starting
> "$output"

# Main logic
if [ -n "$domain" ]; then
    fetch_subdomains "$domain" "$output"
elif [ -n "$domain_list" ]; then
    while IFS= read -r dom; do
        # Skip empty lines or lines starting with #
        [[ -z "$dom" || "$dom" =~ ^# ]] && continue
        fetch_subdomains "$dom" "$output"
    done < "$domain_list"
else
    echo "[-] No domain or list provided."
    usage
fi

if [ "$silent" = false ]; then
    echo "[+] All subdomains saved to: $output"
fi
